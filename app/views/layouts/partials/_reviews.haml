.mb-80
  %h3= I18n.t(:write_review)
  %p.general-info-text= I18n.t(:score)
  .mb-15
    .rating
  = simple_form_for ReviewForm.new(Review.new), url: review_path, html: {class: 'row'} do |review|
    .col-md-8
      = review.input :title, label: I18n.t(:title), label_input: { class: 'control-label input-label in-grey-600'}, input_html: {id: 'title'}
      = review.input :message, as: :text, label: I18n.t(:review), label_input: { class: 'control-label input-label in-grey-600'}, input_html: {id: 'review', cols: 5, rows: 8}
      = review.input :stars, :as => :hidden, input_html: {value: 1}
      = review.input :book_id, :as => :hidden, input_html: {value: book_id}
      = review.input :user_id, :as => :hidden, input_html: {value: current_user ? current_user.id : 1}
      = review.button :submit, I18n.t(:post), disabled: current_user ? false : true
  .mb-80
    .rating-stars.text-center
    %h3.in-gold-500.mb-25= "#{I18n.t(:reviews)} #{reviews.select { |review| review.status == 'Approved' }.length}"
    - if reviews
      - reviews.each_with_index do |review, index|
        - if review.status == 'Approved'
          .general-message-wrap.divider-lg
          .clearfix
            %img.img-circle.logo-size.inlide-block.pull-left{src: ""}
            .ml-70
              %div
                .general-message-date.hidden-xs= review.created_at.strftime("%d/%m/%Y")
                .max-240
                  .general-message-verified= I18n.t(:verified_reviewer)
                  .general-message-name= review.user.decorate.name
              .mb-15
                .read-rating{class: "stars-#{index}",data: {stars: review.stars}}
              %p= review.message
